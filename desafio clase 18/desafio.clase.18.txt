>> Consigna: Utilizando Mongo Shell, crear una base de datos llamada ecommerce que contenga dos colecciones: texts y productos.

> use ecommerce

> db.createCollection('mensajes')
> db.createCollection('productos')

1)Agregar 10 documentos con valores distintos a las colecciones texts y productos. El formato de los documentos debe estar en correspondencia con el que venimos utilizando en el entregable con base de datos MariaDB. 
2)Definir las claves de los documentos en relación a los campos de las tablas de esa base. En el caso de los productos, poner valores al campo precio entre los 100 y 5000 pesos(eligiendo valores intermedios, ej: 120, 580, 900, 1280, 1700, 2300, 2860, 3350, 4320, 4990). 



db.mensajes.insertMany([
	{ "username": "Nicolas", date: new Date().toLocaleString(), "text": "Hola, como estas?" },
	{ "username": "Paula", date: new Date().toLocaleString(), "text": "Hola, bien y vos?" },
	{ "username": "Nicolas", date: new Date().toLocaleString(), "text": "Bien, aca trabajando en mi proyecto." },
	{ "username": "Paula", date: new Date().toLocaleString(), "text": "Que bueno! yo tambien..." },
	{ "username": "Nicolas", date: new Date().toLocaleString(), "text": "Como venis?" },
	{ "username": "Paula", date: new Date().toLocaleString(), "text": "Bien" },
	{ "username": "Nicolas", date: new Date().toLocaleString(), "text": "Que bueno, cualquier cosa hablamos" },
	{ "username": "Paula", date: new Date().toLocaleString(), "text": "Dale! saludos!" },
	{ "username": "Paula", dte: new Date().toLocaleString(), "text": "Adios!" },
	{ "username": "Nicolas", date: new Date().toLocaleString(), "text": "Adios! :D" }
])

db.productos.insertMany([
	{ "title": "Botas Snowboard", "price": 1500, "thumbnail": "https://assets.adidas.com/images/w_600,f_auto,q_auto/68f4cecf54824d5fb325aa34003637e3_9366/Botas_Snowboard_Tactical_Lexicon_ADV_Blanco_G26233_01_standard.jpg"},
	{ "title": "Campera Snowboard", "price": 2750, "thumbnail": "https://http2.mlstatic.com/D_NQ_NP_835093-MLA44847377603_022021-O.jpg"},
	{ "title": "Tabla Snowboard", "price": 5500, "thumbnail": "https://universoventura.vteximg.com.br/arquivos/ids/196256-600-600/Tabla-Snowboard-Rossignol-Circuit-Aplification-Tech---Fijaciones-Black-REKWP10--6.jpg?v=637899755656370000"},
	{ "title": "GoPro", "price": 4500, "thumbnail": "https://http2.mlstatic.com/D_NQ_NP_2X_815623-MLA51481786285_092022-V.webp"},
	{ "title": "Medias termicas", "price": 110.99, "thumbnail": "http://d3ugyf2ht6aenh.cloudfront.net/stores/001/102/406/products/medias1-ea8c5ff8fae51b4e1115630365314933-640-0.jpg"},
	{ "title": "Beanie", "price": 50.75, "thumbnail": "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRrVQuHAw1SSy8-leUh_GSD3WHaV5OTlOG49fopmFSlFeoHVxb0DJkzt1DpTSBwVbAIrak&usqp=CAU"},
	{ "title": "Guantes GoreTex", "price": 650.99, "thumbnail": "https://http2.mlstatic.com/D_NQ_NP_983349-MLA43248462101_082020-O.webp"},
	{ "title": "Casco", "price": 600.50, "thumbnail": "https://http2.mlstatic.com/D_NQ_NP_743192-MLA46758033695_072021-O.webp"},
	{ "title": "Remera termica", "price": 150.59, "thumbnail": "https://d3ugyf2ht6aenh.cloudfront.net/stores/861/003/products/termica_alfest_gris1-a3df010764b87f5c0d15855110644089-1024-1024.jpg"},
	{ "title": "Snowboard bag", "price": 800.90, "thumbnail": "https://images.evo.com/imgp/700/186387/873754/evo-roller-snowboard-bag-.jpg"}
])


3) Listar todos los documentos en cada colección.

db.productos.find({})
db.mensajes.find({})

4) Mostrar la cantidad de documentos almacenados en cada una de ellas.

db.mensajes.countDocuments()
db.productos.countDocuments()

5) Realizar un CRUD sobre la colección de productos:
a) Agregar un producto más en la colección de productos 

db.productos.insertOne({"title": "Antiparras", "price": 3250, "thumbnail": "https://http2.mlstatic.com/D_NQ_NP_955464-MLA41877331976_052020-O.webp"})


b) Realizar una consulta por nombre de producto específico:
b i) Listar los productos con precio menor a 1000 pesos.

db.productos.find({"price": {$lt: 1000}})

b ii) Listar los productos con precio entre los 1000 a 3000 pesos.
db.productos.find({"price": {$gte:1000, $lte: 3000}})

b iii) Listar los productos con precio mayor a 3000 pesos.
db.productos.find({"price": {$gt:3000}})

b iv)Realizar una consulta que traiga sólo el nombre del tercer producto más barato.
db.productos.find().sort({"price":1}).skip(2).limit(1)

c) Hacer una actualización sobre todos los productos, agregando el campo stock a todos ellos con un valor de 100.
db.productos.updateMany({},{$set: {"Stock":100})

d) Cambiar el stock a cero de los productos con precios mayores a 4000 pesos. 
db.productos.updateMany({price: {$gt:4000}},{$set: {"Stock":0}})

e) Borrar los productos con precio menor a 1000 pesos 
db.productos.deleteMany({price: {$lt:1000}})


6) Crear un usuario 'pepe' clave: 'asd456' que sólo pueda leer la base de datos ecommerce. Verificar que pepe no pueda cambiar la información.

use ecommerce

db.createUser({
	user: "pepe",
	pwd: "asd456",
	roles: [
		{role: "read", db: "ecommerce"}
		]
	}
)

mongosh -u pepe -p asd456

db.productos.insertOne({"title": "Antiparras", "price": 3250, "thumbnail": "https://http2.mlstatic.com/D_NQ_NP_955464-MLA41877331976_052020-O.webp"})  
 //No debe permitir insertar producto